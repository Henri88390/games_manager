name: Backend Tests

on:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/backend-tests.yml"
  pull_request:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/backend-tests.yml"

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_games_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: backend/package.json

      - name: Install dependencies
        run: |
          cd backend
          npm install

      - name: Setup test database
        run: |
          cd backend
          PGPASSWORD=test_password psql -h localhost -p 5433 -U test_user -d test_games_db -f init-db.sql
        env:
          DB_HOST: localhost
          DB_PORT: 5433
          DB_NAME: test_games_db
          DB_USER: test_user
          DB_PASSWORD: test_password

      - name: Run tests
        run: |
          cd backend
          npm test
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 5433
          DB_NAME: test_games_db
          DB_USER: test_user
          DB_PASSWORD: test_password

      - name: Run tests with coverage
        run: |
          cd backend
          npm run test:coverage
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 5433
          DB_NAME: test_games_db
          DB_USER: test_user
          DB_PASSWORD: test_password

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage/lcov.info
          directory: ./backend/coverage/
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false
